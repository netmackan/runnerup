apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

// Based on suggestion by Pawe≈Ç Stankowski on http://stackoverflow.com/a/22584908
// global variables
ext {
    taskParts = Collections.emptySet();
}
def splitCamelCase(String word) {
    def result = []
    int nextStart = 0;
    for (int i = 1; i < word.length(); i++) {
        if(word.charAt(i).isUpperCase()) {
            result.add(word.substring(nextStart, i));
            nextStart = i;
        }
    }

    result.add(word.substring(nextStart));
    return result;
}

// start parameters
println "Start parametes: tasks = " + gradle.startParameter.getTaskNames()

gradle.startParameter.getTaskNames().each { task ->

    // This line is needed to skip other projects' tasks
    // You can safely remove it if you have only one project
    if(!task.startsWith(':app:')) return;

    taskParts = new HashSet(splitCamelCase(task.split(":").last()));

    println taskParts

    println "" + taskParts.contains("Froyo").toString() + ":" + taskParts.contains("Latest").toString()

    if (!taskParts.contains("Debug") && !taskParts.contains("Release")) {
        println "????????????????????"
        aasdas;
        return; // do not process tasks that are not ending with proper build type.
    }
}

android {
    compileSdkVersion 20
    buildToolsVersion '20.0.0'

    flavorDimensions "sdk", "map"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        froyoGmap {
            manifest.srcFile 'froyoGmap/AndroidManifest.xml'
            java.srcDirs = ['froyoGmap/java']
        }
        latestGmap {
            manifest.srcFile 'latestGmap/AndroidManifest.xml'
            java.srcDirs = ['latestGmap/java']
        }
        gmap {
            manifest.srcFile 'gmap/AndroidManifest.xml'
            java.srcDirs = ['gmap/java']
        }
        nomap {
            manifest.srcFile 'nomap/AndroidManifest.xml'
            java.srcDirs = ['nomap/java']
        }
    }

    productFlavors {
        froyo {
            flavorDimension "sdk"
            minSdkVersion 8
            targetSdkVersion 18
            versionName "1.43"
            versionCode 8000043 
        }
        latest {
            flavorDimension "sdk"
            minSdkVersion 14
            targetSdkVersion 20
            versionName "1.43"
            versionCode 14000043
        }
        gmap {
            flavorDimension "map"
        }
        nomap {
            flavorDimension "map"
        }
    }

    signingConfigs {
        release {
            storeFile file("../../my-release-key.keystore")
            keyAlias "alias_name"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {

    // For latest with gmap: use latest SDK (for Wear support) and use play-services
    // latestGmapCompile 'com.android.support:support-v4:20.0.0'
    // latestGmapCompile 'com.google.android.gms:play-services:6.1.11'
    if (taskParts.contains('Latest') && !taskParts.contains('Nomap')) {
        compile 'com.android.support:support-v4:20.0.0'
        compile 'com.google.android.gms:play-services:6.1.11'
        latestCompile 'com.google.android.gms:play-services:6.1.11'
    }


    // For froyo with gmap: use older SDK and use play-services
    // froyoGmapCompile 'com.android.support:support-v4:19.1.+'
    // froyoGmapCompile 'com.google.android.gms:play-services:3.2.65'
    if (taskParts.contains('Froyo') && !taskParts.contains('Nomap')) {
        compile 'com.android.support:support-v4:19.1.+'
        compile 'com.google.android.gms:play-services:3.2.65'
        froyoCompile 'com.google.android.gms:play-services:3.2.65'
    }

    //compile 'com.google.android.gms:play-services:3.2.65'

    // For nomap: we can use older SDK
    nomapCompile 'com.android.support:support-v4:19.1.+'

    // Workaround for the IDE
    //if ((!taskParts.contains('Gmap') && !taskParts.contains('Nomap'))) {
    //if (taskParts.isEmpty()) {
    //if (true) {
    //    compile 'com.google.android.gms:play-services:3.2.65'
    //    println "!!!!!!!!!!!!!!!!!!!!!!!!!!!: " + taskParts
    //}

    //if (false) {
    //    compile 'com.google.android.gms:play-services:6.1.11'
    //}

    compile files('../GraphView/public/graphview-3.1.jar')
    
    compile project(':common')
    compile project(':hrdevice')

    latestWearApp project(':wear')
}

allprojects {
    tasks.withType(JavaCompile) {
        // options.compilerArgs << "-Xlint:deprecation";
        options.compilerArgs << "-Xlint:unchecked"
    }
}

def props = new Properties()
if (rootProject.file("release.properties").exists()) {
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
    android.signingConfigs.release.storePassword props.keyStorePassword
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.keyPassword props.keyAliasPassword
}

